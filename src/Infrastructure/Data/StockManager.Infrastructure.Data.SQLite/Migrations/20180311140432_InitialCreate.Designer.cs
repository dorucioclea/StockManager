// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using StockManager.Domain.Core.Common.Enums;
using StockManager.Infrastructure.Data.SQLite;
using System;

namespace StockManager.Infrastructure.Data.SQLite.Migrations
{
    [DbContext(typeof(SQLiteDataContext))]
    [Migration("20180311140432_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("StockManager.Domain.Core.Entities.Market.Candle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("ClosePrice");

                    b.Property<string>("CurrencyPair")
                        .IsRequired();

                    b.Property<decimal>("MaxPrice");

                    b.Property<decimal>("MinPrice");

                    b.Property<DateTime>("Moment");

                    b.Property<decimal>("OpenPrice");

                    b.Property<int>("Period");

                    b.Property<decimal>("VolumeInBaseCurrency");

                    b.Property<decimal>("VolumeInQuoteCurrency");

                    b.HasKey("Id");

                    b.HasIndex("Moment");

                    b.HasIndex("CurrencyPair", "Period", "Moment")
                        .IsUnique()
                        .HasName("UniqueCandle");

                    b.ToTable("Candles");
                });
#pragma warning restore 612, 618
        }
    }
}
